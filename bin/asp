#! /usr/bin/env ruby
# coding: utf-8

require 'ansible_spec_plus'
require 'optparse'

require_relative '../lib/ansible_spec_plus'

ARGV.push('-h') if ARGV.empty?

KNOWN_RESOURCES = [
  'file',
  'template',
  'docker_container',
  'docker_image',
  'service',
  'apt',
  'pip',
  'gem'
]

options = {}

opt_parser = OptionParser.new do |opt|
  opt.banner = "Ansible Spec Plus is an addon to 'ansible_spec' which enables you to run
specs for Ansible roles, hosts and/or playbooks separately. Furthermore
it provides you with a simple resource coverage summary.

Usage: asp COMMAND [OPTIONS]"
  opt.separator  ""
  opt.separator  "Commands:"
  opt.separator  "     list                                     # list all available specs"
  opt.separator  "     [rolespec|hostspec|playbookspec] list    # list all available role/host/playbook specs"
  opt.separator  ""
  opt.separator  "Options:"

  opt.on("-l", "--local", "running specs on local machine") do
    ENV['BACKEND'] = 'exec'
  end

  opt.on("-h","--help","help") do
    puts opt_parser
  end
end

opt_parser.parse!

if ARGV[0] == 'list'
  options[:list] = true
elsif ARGV[0] == 'rolespec'
  if ARGV[1] == 'list'
    options[:list_rolespec] = true
  else
    options[:run_rolespec] = ARGV[1]
  end
elsif ARGV[0] == 'hostspec'
  if ARGV[1] == 'list'
    options[:list_hostspec] = true
  else
    options[:run_hostspec] = ARGV[1]
  end
elsif ARGV[0] == 'playbookspec'
  if ARGV[1] == 'list'
    options[:list_playbookspec] = true
  else
    options[:run_playbookspec] = ARGV[1]
  end
else
end

AnsibleSpecPlus.new.run(options)
