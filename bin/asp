#! /usr/bin/env ruby
# coding: utf-8

# require 'ansible_spec_plus'
require 'optparse'

require_relative '../lib/ansible_spec_plus'
require_relative '../lib/helpers/log'

include Helpers::Log

ARGV.push('-h') if ARGV.empty?

KNOWN_RESOURCES = [
  'file',
  'template',
  'docker_container',
  'docker_image',
  'service'
]

options = {}

opt_parser = OptionParser.new do |opt|
  opt.banner = "Ansible Spec Plus is an addon to 'ansible_spec' which enables you to run
specs for Ansible roles, hosts and/or playbooks separately. Furthermore
it provides you with a simple resource coverage summary.

Usage: asp COMMAND [OPTIONS]"
  opt.separator  ""
  opt.separator  "Commands:"
  opt.separator  "     all list                                 # list all available specs"
  opt.separator  "     [rolespec|hostspec|playbookspec] list    # list all available role/host/playbook specs"
  opt.separator  ""
  opt.separator  "Options:"

  opt.on("-l", "--local", "running specs on local machine") do
    ENV['BACKEND'] = 'exec'
  end

  opt.on("-h","--help","help") do
    puts opt_parser
  end
end

opt_parser.parse!

case ARGV[0]
when "rolespec"
  case ARGV[1]
  when "list"
    AnsibleSpecPlus.list_role_specs
  else
    AnsibleSpecPlus.run_role_spec(ARGV[1])
  end
when "hostspec"
  case ARGV[1]
  when "list"
    AnsibleSpecPlus.list_host_specs
  else
    AnsibleSpecPlus.run_host_spec(ARGV[1])
  end
when "all"
  case ARGV[1]
  when "list"
    AnsibleSpecPlus.list_all_specs
  end
end

# begin
#   AnsibleSpecPlus.new(
#     options
#   )
# rescue => e
#   raise e
# end
